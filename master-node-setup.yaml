- name: Set up Kubernetes master node
  hosts: slave1
  become: yes

  vars:
    cri_socket: unix:///var/run/containerd/containerd.sock
    pod_network: 10.244.0.0/16
  
  tasks:
    - name: Install Docker and Containerd
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - docker.io
        - containerd
      when: ansible_os_family == 'Debian'

    - name: Configure Containerd
      template:
        src: containerd-config.toml.j2
        dest: /etc/containerd/config.toml
      notify: Restart containerd
      when: ansible_os_family == 'Debian'

    - name: Initialize KUbernets master
      command: kubeadm init --pod-network-cidr={{pod_network}}
      args:
        creates: /etc/kubernetes/admin.conf
      register: kubeadm_init_result
      when: ansible_os_family == 'Debian'

    - name: Copy kubeconfig for regular user
      command: "{{item}}"
      loop:
        - mkdir -p $HOME/.kube
        - cp /etc/kubernetes/admin.conf $HOME/.kube/config
      when: kubeadm_init_result.rc == 0

    - name: Copy kubeconfig for root user
      command: "{{item}}"
      loop:
        - cp /etc/kubernetes/admin.conf /root/.kube/config
      when: kubeadm_init_result.rc == 0

    - name: Apply Flannel CNI
      command: kubectl apply -f https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml
      when: kubeadm_init_result.rc == 0

    - name: Run a command and capture the token
      command: kubeadm token create --print-join-command
      register: command_output

    - name: Print the command output
      debug:
        var: command_output.stdout_lines

    - name: copy the command in file
      local_action:
        module: template
        src: vars_template.j2
        dest: './vars_file.yaml'
      become: yes

  

  handlers:
    - name: Restart containerd
      service:
        name: containerd
        state: restarted
